# Docstrings generated by GitHub Copilot

from typing import Optional, Tuple


class Aminoacid:
    """
    Represents an amino acid in a protein sequence.

    Attributes:
    - position (Tuple[int, int, int]): The position of the amino acid in
        3D space.
    - predecessor (Optional[Aminoacid]): The previous amino acid in the
        protein sequence.
    - link (Optional[Aminoacid]): The next amino acid in the protein sequence.
    - _type (str): The type of the amino acid.

    Methods:
    - __init__(self, type: str, predecessor: Optional[Aminoacid] = None,
        link: Optional[Aminoacid] = None) -> None:
        Initializes a new instance of the Aminoacid class.
    - get_type(self) -> str:
        Returns the type of the amino acid.
    - get_stability_score(self, other: Aminoacid) -> int:
        Calculates the stability score between two amino acids.
    - __str__(self) -> str:
        Returns a string representation of the amino acid.
    """

    def __init__(self, type: str, predecessor: Optional["Aminoacid"] = None,
                 link: Optional["Aminoacid"] = None) -> None:
        """
        Initializes a new instance of the Aminoacid class.

        Parameters:
        - type (str): The type of the amino acid.
        - predecessor (Optional[Aminoacid]): The previous amino acid in the
            protein sequence.
        - link (Optional[Aminoacid]): The next amino acid in the protein
            sequence.
        """
        self.position: Tuple[int, int, int] = (0, 0, 0)
        self.predecessor: Optional["Aminoacid"] = predecessor
        self.link: Optional["Aminoacid"] = link
        self._type: str = type

    def get_type(self) -> str:
        """
        Returns the type of the amino acid.

        Returns:
        - str: The type of the amino acid.
        """
        return self._type

    def get_stability_score(self, other: "Aminoacid") -> int:
        """
        Calculates the stability score between two amino acids.

        Parameters:
        - other (Aminoacid): The other amino acid.

        Returns:
        - int: The stability score between the two amino acids.
        """
        self_type = self.get_type()
        other_type = other.get_type()

        if self_type == "P" or other_type == "P":
            return 0

        if self_type == "H" or other_type == "H":
            return -1

        if self_type == "C":
            return -5

        return 0

    def __str__(self) -> str:
        """
        Returns a string representation of the amino acid.

        Returns:
        - str: The string representation of the amino acid.
        """
        return self._type
